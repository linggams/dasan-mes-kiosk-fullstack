import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "./fontawesome";
import { Toaster } from "sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

type Props = {
    params: {};
    searchParams: { [key: string]: string | string[] | undefined };
};

export async function generateMetadata(_: any, { searchParams }: Props): Promise<Metadata> {
    const factory = searchParams?.factory ?? "1";
    const line = searchParams?.line ?? "1";

    return {
        title: `DPPI Kiosk :: Factory ${factory} - Line ${line}`,
        description: "Generated by create next app",
    };
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}

        <Toaster richColors position="top-right" />
      </body>
    </html>
  );
}
